DRIVER - Debug mode enabled
DRIVER - Will autokill broker after 15 seconds
BROKER<zone_1> - Successfully initialized broker object (BROKER140114996640064)
BROKER<zone_1> - Try to connect with ZooKeeper server: hosts = 10.0.0.1:2181
BROKER<zone_1> - ZooKeeper Current Status = LOST
BROKER<zone_1> - Current state is now = CONNECTED
BROKER<zone_1> - Setting up shared state znode for multiple primary brokers
BROKER<zone_1> - Creating znode /shared_state/publishers/ with value shared state container of all active publishers
BROKER<zone_1> - Creating znode /shared_state/subscribers/ with value shared state container of all active subscribers
BROKER<zone_1> - initializing /primaries/ znode if not exists
BROKER<zone_1> - Creating znode /primaries with value container of all primary brokers
BROKER<zone_1> - Publishers shared state changed!
BROKER<zone_1> - Subscribers shared state changed!
BROKER<zone_1,backup> - I am currently a contender/backup for zone_1
BROKER<zone_1,backup> - contenders for /elections/zone_1: []
BROKER<zone_1,primary> - I (bdfcf0aa-65a2-4ef8-9817-c9a75fdae323) AM LEADER OF /elections/zone_1
BROKER<zone_1,primary> - Storing my information in /primaries/zone_1
BROKER<zone_1,primary> - Configuring myself!
BROKER<zone_1,primary> - Configure Start
BROKER<zone_1,primary> - Opening two REP sockets for publisher registration and subscriber registration
BROKER<zone_1,primary> - Attempting bind to port 5555
BROKER<zone_1,primary> - Successful bind to port 5555
BROKER<zone_1,primary> - Attempting bind to port 5556
BROKER<zone_1,primary> - Successful bind to port 5556
BROKER<zone_1,primary> - Enabling publisher registration on port 5555
BROKER<zone_1,primary> - Enabling subscriber registration on port 5556
BROKER<zone_1,primary> - Register sockets with a ZMQ poller
BROKER<zone_1,primary> - Configure Stop
BROKER<zone_1,primary> - /primaries/zone_1 znode does not exist: creating!
BROKER<zone_1,primary> - Creating znode /primaries/zone_1 with value 10.0.0.3,5555,5556
BROKER<zone_1,primary> - Updating current system load znode
BROKER<zone_1,primary> - Setting a new value = 0.0 on znode /shared_state/current_load
BROKER<zone_1,primary> - /shared_state/current_load znode exists; setting a new value on it
BROKER<zone_1,primary> - New value at znode /shared_state/current_load: value = b'0.0', stat = ZnodeStat(czxid=109507, mzxid=109514, ctime=1627347861955, mtime=1627347866385, version=1, cversion=0, aversion=0, ephemeralOwner=0, dataLength=3, numChildren=0, pzxid=109507)
BROKER<zone_1,primary> - Start Event Loop
BROKER<zone_1,primary> - Begin indefinite event poll loop
BROKER<zone_1,primary> - Publisher Registration Started: {
    "address": "10.0.0.7:5556",
    "topics": [
        "A",
        "B",
        "C"
    ],
    "id": "140436547410240",
    "offered": 1
}
BROKER<zone_1,primary> - Notifying subscribers
BROKER<zone_1,primary> - Creating znode /shared_state/publishers/140436547410240 with value {"address": "10.0.0.7:5556", "offered": 1, "id": "140436547410240", "topics": ["A", "B", "C"]}
BROKER<zone_1,primary> - Publishers shared state changed!
BROKER<zone_1,primary> - Setting a new value = 1.0 on znode /shared_state/current_load
BROKER<zone_1,primary> - /shared_state/current_load znode exists; setting a new value on it
BROKER<zone_1,primary> - New value at znode /shared_state/current_load: value = b'1.0', stat = ZnodeStat(czxid=109507, mzxid=109522, ctime=1627347861955, mtime=1627347867190, version=2, cversion=0, aversion=0, ephemeralOwner=0, dataLength=3, numChildren=0, pzxid=109507)
BROKER<zone_1,primary> - Sending response: {'success': 'registration success'}
BROKER<zone_1,primary> - Publisher Registration Succeeded
BROKER<zone_1,primary> - Event 3: subscriber
BROKER<zone_1,primary> - Subscriber Registration Started
BROKER<zone_1,primary> - New subscriber info: {'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}
BROKER<zone_1,primary> - Enabling subscriber notification (about publishers)
BROKER<zone_1,primary> - Notifying subscribers
BROKER<zone_1,primary> - notify_subscribers::sub_id=139811911027008
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 139811911027008 and pub 140436547410240
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - notify_subscribers::sub_id=139811911027008
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 139811911027008 and pub 140436547410240
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - notify_subscribers::sub_id=139811911027008
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 139811911027008 and pub 140436547410240
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - Sending message to subscriber: [{"register_pub": {"addresses": ["10.0.0.7:5556"], "topic": "A"}}, {"register_pub": {"addresses": ["10.0.0.7:5556"], "topic": "B"}}, {"register_pub": {"addresses": ["10.0.0.7:5556"], "topic": "C"}}]
BROKER<zone_1,primary> - Waiting for response...
BROKER<zone_1,primary> - Subscriber notified successfully (confirmation: <Notification Acknowledged. New publishers added.>
BROKER<zone_1,primary> - Subscriber registered successfully
BROKER<zone_1,primary> - Creating znode /shared_state/subscribers/139811911027008 with value {"address": "10.0.0.6", "requested": 1, "id": "139811911027008", "topics": ["A", "B", "C"]}
BROKER<zone_1,primary> - Subscribers shared state changed!
BROKER<zone_1,primary> - Setting a new value = 2.0 on znode /shared_state/current_load
BROKER<zone_1,primary> - /shared_state/current_load znode exists; setting a new value on it
BROKER<zone_1,primary> - New value at znode /shared_state/current_load: value = b'2.0', stat = ZnodeStat(czxid=109507, mzxid=109527, ctime=1627347861955, mtime=1627347867755, version=3, cversion=0, aversion=0, ephemeralOwner=0, dataLength=3, numChildren=0, pzxid=109507)
BROKER<zone_1,primary> - Publisher Registration Started: {
    "address": "10.0.0.8:5556",
    "topics": [
        "A",
        "B",
        "C"
    ],
    "id": "140689472907584",
    "offered": 1
}
BROKER<zone_1,primary> - Notifying subscribers
BROKER<zone_1,primary> - Checking dominance relation between offered/requested
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 139811911027008 and pub 140689472907584
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - Sending notification to sub: 139811911027008
BROKER<zone_1,primary> - Waiting for response...
BROKER<zone_1,primary> - Subscriber notified successfully (confirmation: <Notification Acknowledged. New publishers added.>
BROKER<zone_1,primary> - Creating znode /shared_state/publishers/140689472907584 with value {"address": "10.0.0.8:5556", "offered": 1, "id": "140689472907584", "topics": ["A", "B", "C"]}
BROKER<zone_1,primary> - Publishers shared state changed!
BROKER<zone_1,primary> - Setting a new value = 3.0 on znode /shared_state/current_load
BROKER<zone_1,primary> - /shared_state/current_load znode exists; setting a new value on it
BROKER<zone_1,primary> - New value at znode /shared_state/current_load: value = b'3.0', stat = ZnodeStat(czxid=109507, mzxid=109529, ctime=1627347861955, mtime=1627347867820, version=4, cversion=0, aversion=0, ephemeralOwner=0, dataLength=3, numChildren=0, pzxid=109507)
BROKER<zone_1,primary> - Sending response: {'success': 'registration success'}
BROKER<zone_1,primary> - Publisher Registration Succeeded
BROKER<zone_1,primary> - Event 5: subscriber
BROKER<zone_1,primary> - Subscriber Registration Started
BROKER<zone_1,primary> - New subscriber info: {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}
BROKER<zone_1,primary> - Enabling subscriber notification (about publishers)
BROKER<zone_1,primary> - Notifying subscribers
BROKER<zone_1,primary> - notify_subscribers::sub_id=140069863315776
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 140069863315776 and pub 140436547410240
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - notify_subscribers::sub_id=140069863315776
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 140069863315776 and pub 140689472907584
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - notify_subscribers::sub_id=140069863315776
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 140069863315776 and pub 140436547410240
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - notify_subscribers::sub_id=140069863315776
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 140069863315776 and pub 140689472907584
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - notify_subscribers::sub_id=140069863315776
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 140069863315776 and pub 140436547410240
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - notify_subscribers::sub_id=140069863315776
BROKER<zone_1,primary> - Checking offered vs. requested relation between sub 140069863315776 and pub 140689472907584
BROKER<zone_1,primary> - Subscribers: dict_values([[{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}], [{'address': '10.0.0.6', 'requested': 1, 'id': '139811911027008', 'topics': ['A', 'B', 'C']}, {'address': '10.0.0.5', 'requested': 1, 'id': '140069863315776', 'topics': ['A', 'B', 'C']}]])
BROKER<zone_1,primary> - Sending message to subscriber: [{"register_pub": {"addresses": ["10.0.0.7:5556", "10.0.0.8:5556"], "topic": "A"}}, {"register_pub": {"addresses": ["10.0.0.7:5556", "10.0.0.8:5556"], "topic": "B"}}, {"register_pub": {"addresses": ["10.0.0.7:5556", "10.0.0.8:5556"], "topic": "C"}}]
BROKER<zone_1,primary> - Waiting for response...
BROKER<zone_1,primary> - Subscriber notified successfully (confirmation: <Notification Acknowledged. New publishers added.>
BROKER<zone_1,primary> - Subscriber registered successfully
BROKER<zone_1,primary> - Creating znode /shared_state/subscribers/140069863315776 with value {"address": "10.0.0.5", "requested": 1, "id": "140069863315776", "topics": ["A", "B", "C"]}
BROKER<zone_1,primary> - Subscribers shared state changed!
BROKER<zone_1,primary> - Setting a new value = 4.0 on znode /shared_state/current_load
BROKER<zone_1,primary> - /shared_state/current_load znode exists; setting a new value on it
BROKER<zone_1,primary> - New value at znode /shared_state/current_load: value = b'4.0', stat = ZnodeStat(czxid=109507, mzxid=109572, ctime=1627347861955, mtime=1627347868643, version=5, cversion=0, aversion=0, ephemeralOwner=0, dataLength=3, numChildren=0, pzxid=109507)
BROKER<zone_1,primary> - Event 27: subscriber
BROKER<zone_1,primary> - Subscriber Registration Started
BROKER<zone_1,primary> - Disconnecting subscriber...
BROKER<zone_1,primary> - Subscribers shared state changed!
BROKER<zone_1,primary> - Removing subscriber 139811911027008
BROKER<zone_1,primary> - Removing subscriber 139811911027008
BROKER<zone_1,primary> - Removing subscriber 139811911027008
BROKER<zone_1,primary> - Setting a new value = 3.0 on znode /shared_state/current_load
BROKER<zone_1,primary> - /shared_state/current_load znode exists; setting a new value on it
BROKER<zone_1,primary> - New value at znode /shared_state/current_load: value = b'3.0', stat = ZnodeStat(czxid=109507, mzxid=111547, ctime=1627347861955, mtime=1627347879409, version=6, cversion=0, aversion=0, ephemeralOwner=0, dataLength=3, numChildren=0, pzxid=109507)
BROKER<zone_1,primary> - Event 29: subscriber
BROKER<zone_1,primary> - Subscriber Registration Started
BROKER<zone_1,primary> - Disconnecting subscriber...
BROKER<zone_1,primary> - Subscribers shared state changed!
BROKER<zone_1,primary> - Setting a new value = 2.0 on znode /shared_state/current_load
BROKER<zone_1,primary> - /shared_state/current_load znode exists; setting a new value on it
BROKER<zone_1,primary> - New value at znode /shared_state/current_load: value = b'2.0', stat = ZnodeStat(czxid=109507, mzxid=111808, ctime=1627347861955, mtime=1627347880221, version=7, cversion=0, aversion=0, ephemeralOwner=0, dataLength=3, numChildren=0, pzxid=109507)
BROKER<zone_1,primary> - Autokilling broker
BROKER<zone_1,primary> - Disconnect
BROKER<zone_1,primary> - Disconnecting. Destroying ZMQ context..
